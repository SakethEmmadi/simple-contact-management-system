#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_NAME_LEN 50
#define MAX_PHONE_LEN 15
#define MAX_CONTACTS 100

// Structure to hold contact information
typedef struct {
    char name[MAX_NAME_LEN];
    char phone[MAX_PHONE_LEN];
} Contact;

// Function prototypes
void addContact(Contact* contacts, int* count);
void displayContacts(const Contact* contacts, int count);
void searchContact(const Contact* contacts, int count);

int main() {
    Contact contacts[MAX_CONTACTS];
    int count = 0; // Number of contacts
    int choice;

    while (1) {
        printf("\nContact Management System\n");
        printf("1. Add Contact\n");
        printf("2. Display All Contacts\n");
        printf("3. Search Contact\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);
        getchar(); // To consume the newline character left by scanf

        switch (choice) {
            case 1:
                addContact(contacts, &count);
                break;
            case 2:
                displayContacts(contacts, count);
                break;
            case 3:
                searchContact(contacts, count);
                break;
            case 4:
                printf("Exiting program. Goodbye!\n");
                exit(0);
            default:
                printf("Invalid choice. Please try again.\n");
        }
    }

    return 0;
}

void addContact(Contact* contacts, int* count) {
    if (*count >= MAX_CONTACTS) {
        printf("Contact list is full. Cannot add more contacts.\n");
        return;
    }

    printf("Enter name: ");
    fgets(contacts[*count].name, MAX_NAME_LEN, stdin);
    contacts[*count].name[strcspn(contacts[*count].name, "\n")] = 0; // Remove newline

    printf("Enter phone number: ");
    fgets(contacts[*count].phone, MAX_PHONE_LEN, stdin);
    contacts[*count].phone[strcspn(contacts[*count].phone, "\n")] = 0; // Remove newline

    (*count)++;
    printf("Contact added successfully!\n");
}

void displayContacts(const Contact* contacts, int count) {
    if (count == 0) {
        printf("No contacts to display.\n");
        return;
    }

    printf("\nList of Contacts:\n");
    for (int i = 0; i < count; i++) {
        printf("%d. Name: %s, Phone: %s\n", i + 1, contacts[i].name, contacts[i].phone);
    }
}

void searchContact(const Contact* contacts, int count) {
    if (count == 0) {
        printf("No contacts to search.\n");
        return;
    }

    char searchName[MAX_NAME_LEN];
    printf("Enter name to search: ");
    fgets(searchName, MAX_NAME_LEN, stdin);
    searchName[strcspn(searchName, "\n")] = 0; // Remove newline

    for (int i = 0; i < count; i++) {
        if (strcmp(contacts[i].name, searchName) == 0) {
            printf("Contact found: Name: %s, Phone: %s\n", contacts[i].name, contacts[i].phone);
            return;
        }
    }

    printf("Contact not found.\n");
}
